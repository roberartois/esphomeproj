---

# ESP Water Heater Controller

## üá¨üáß English

### üîß Features
- Dual-stage water heater control via relays  
- Temperature monitoring with DS18B20  
- OLED display with multiple pages and auto-dimming  
- Physical buttons for navigation and temperature adjustment  
- Configurable target and threshold temperatures  
- Automatic heater logic based on current temperature  
- Two integration modes:  
  - Native ESPHome API (Home Assistant)  
  - MQTT-based control and telemetry  
- OTA updates supported  
- Two hardware variants:
  - `esp8266_12F_Version/` ‚Äî for ESP8266-12F  
  - `esp32_C3_Version/` ‚Äî for ESP32-C3 Super Mini

---

### üì¶ Installation

1. Install [ESPHome](https://esphome.io/) via CLI or Dashboard  
2. Clone this repository  
3. Choose your board folder (`esp8266_12F_Version/` or `esp32_C3_Version/`)  
4. Create a `secrets.yaml` file with your Wi-Fi, OTA, and MQTT credentials  
5. Flash the firmware via USB or OTA:
   ```
   esphome run <your_board>.yaml
   ```

---

### üß† How It Works

- Reads water temperature every 120 seconds  
- Displays current status, target, and threshold values  
- Buttons allow switching pages and adjusting temperatures  
- Heater logic:
  - If temp > target ‚Üí both relays OFF  
  - If temp between threshold and target ‚Üí one relay ON  
  - If temp ‚â§ threshold ‚Üí both relays ON  
- Display dims after inactivity  
- MQTT mode publishes state and accepts commands via configurable topics

---

## üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é

### üîß –ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ
- –î–≤–æ—Å—Ç—É–ø–µ–Ω–µ–≤–µ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –±–æ–π–ª–µ—Ä–æ–º —á–µ—Ä–µ–∑ —Ä–µ–ª–µ  
- –í–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏ DS18B20  
- OLED-–¥–∏—Å–ø–ª–µ–π –∑ –∫—ñ–ª—å–∫–æ–º–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞–º–∏ —Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—è–º  
- –ö–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó —Ç–∞ –∑–º—ñ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤  
- –ù–∞–ª–∞—à—Ç–æ–≤—É–≤–∞–Ω—ñ –ø–æ—Ä–æ–≥–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∏  
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ª–æ–≥—ñ–∫–∞ –Ω–∞–≥—Ä—ñ–≤—É  
- –î–≤–∞ —Ä–µ–∂–∏–º–∏ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó:
  - –ß–µ—Ä–µ–∑ ESPHome API (Home Assistant)  
  - –ß–µ—Ä–µ–∑ MQTT (–∫–µ—Ä—É–≤–∞–Ω–Ω—è —Ç–∞ —Ç–µ–ª–µ–º–µ—Ç—Ä—ñ—è)  
- –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ OTA-–æ–Ω–æ–≤–ª–µ–Ω—å  
- –î–≤—ñ –∞–ø–∞—Ä–∞—Ç–Ω—ñ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó:
  - `esp8266_12F_Version/` ‚Äî –¥–ª—è ESP8266-12F  
  - `esp32_C3_Version/` ‚Äî –¥–ª—è ESP32-C3 Super Mini

---

### üì¶ –Ü–Ω—Å—Ç–∞–ª—è—Ü—ñ—è

1. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å [ESPHome](https://esphome.io/)  
2. –ö–ª–æ–Ω—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π  
3. –û–±–µ—Ä—ñ—Ç—å –ø–∞–ø–∫—É –∑ –≤–∞—à–æ—é –ø–ª–∞—Ç–æ—é (`esp8266_12F_Version/` –∞–±–æ `esp32_C3_Version/`)  
4. –°—Ç–≤–æ—Ä—ñ—Ç—å `secrets.yaml` –∑ –¥–∞–Ω–∏–º–∏ Wi-Fi, OTA —Ç–∞ MQTT  
5. –ü—Ä–æ—à–∏–≤–∫–∞ —á–µ—Ä–µ–∑ USB –∞–±–æ OTA:
   ```
   esphome run <–≤–∞—à–∞_–ø–ª–∞—Ç–∞>.yaml
   ```

---

### üß† –ü—Ä–∏–Ω—Ü–∏–ø —Ä–æ–±–æ—Ç–∏

- –ó—á–∏—Ç—É—î —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤–æ–¥–∏ –∫–æ–∂–Ω—ñ 120 —Å–µ–∫—É–Ω–¥  
- –í—ñ–¥–æ–±—Ä–∞–∂–∞—î –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω, —Ü—ñ–ª—å–æ–≤—É —Ç–∞ –ø–æ—Ä–æ–≥–æ–≤—É —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É  
- –ö–Ω–æ–ø–∫–∏ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –ø–µ—Ä–µ–º–∏–∫–∞—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —Ç–∞ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è  
- –õ–æ–≥—ñ–∫–∞ –Ω–∞–≥—Ä—ñ–≤—É:
  - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ > —Ü—ñ–ª—å–æ–≤–æ—ó ‚Üí —Ä–µ–ª–µ –≤–∏–º–∫–Ω–µ–Ω–æ  
  - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –º—ñ–∂ –ø–æ—Ä–æ–≥–æ–º —ñ —Ü—ñ–ª–ª—é ‚Üí –æ–¥–Ω–µ —Ä–µ–ª–µ —É–≤—ñ–º–∫–Ω–µ–Ω–æ  
  - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ‚â§ –ø–æ—Ä–æ–≥—É ‚Üí –æ–±–∏–¥–≤–∞ —Ä–µ–ª–µ —É–≤—ñ–º–∫–Ω–µ–Ω–æ  
- –î–∏—Å–ø–ª–µ–π –∑–∞—Ç–µ–º–Ω—é—î—Ç—å—Å—è –ø—ñ—Å–ª—è –±–µ–∑–¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ  
- –£ —Ä–µ–∂–∏–º—ñ MQTT –ø—Ä–∏—Å—Ç—Ä—ñ–π –ø—É–±–ª—ñ–∫—É—î —Å—Ç–∞–Ω —ñ –ø—Ä–∏–π–º–∞—î –∫–æ–º–∞–Ω–¥–∏ —á–µ—Ä–µ–∑ —Ç–æ–ø—ñ–∫–∏

---

¬© 2025 Ievgen Gubareni. License: MIT.
